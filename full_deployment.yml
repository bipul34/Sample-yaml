apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-deployment
  namespace: default
  labels:
    app: my-app
  annotations:
    description: "This is a fully featured deployment"
spec:
  replicas: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  selector:
    matchLabels:
      app: my-app
  minReadySeconds: 10
  revisionHistoryLimit: 10
  progressDeadlineSeconds: 600
  template:
    metadata:
      labels:
        app: my-app
      annotations:
        pod-annotation: "example"
    spec:
      containers:
      - name: nginx
        image: nginx:1.25.2
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 80
          protocol: TCP
        env:
        - name: ENV_VAR_NAME
          value: "example_value"
        envFrom:
        - configMapRef:
            name: my-configmap
        - secretRef:
            name: my-secret
        resources:
          limits:
            memory: "512Mi"
            cpu: "500m"
          requests:
            memory: "256Mi"
            cpu: "250m"
        readinessProbe:
          httpGet:
            path: /
            port: 80
          initialDelaySeconds: 5
          periodSeconds: 10
        livenessProbe:
          httpGet:
            path: /
            port: 80
          initialDelaySeconds: 15
          periodSeconds: 20
        startupProbe:
          httpGet:
            path: /
            port: 80
          initialDelaySeconds: 30
          periodSeconds: 10
        volumeMounts:
        - mountPath: /data
          name: my-volume
        lifecycle:
          preStop:
            exec:
              command: ["sh", "-c", "echo 'Cleaning up'"]
          postStart:
            exec:
              command: ["sh", "-c", "echo 'Container started'"]
      initContainers:
      - name: init-my-service
        image: busybox:1.35
        command: ["sh", "-c", "echo Initializing && sleep 1"]
        volumeMounts:
        - mountPath: /init-data
          name: my-volume
      volumes:
      - name: my-volume
        emptyDir: {}
      - name: config-volume
        configMap:
          name: my-configmap
      - name: secret-volume
        secret:
          secretName: my-secret
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      nodeSelector:
        disktype: ssd
      tolerations:
      - key: "key1"
        operator: "Equal"
        value: "value1"
        effect: "NoSchedule"
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
- key: kubernetes.io/e2e-az-name
                operator: In
                values:
                - e2e-az1
                - e2e-az2
      securityContext:
        runAsUser: 1000
        runAsGroup: 3000
        fsGroup: 2000
